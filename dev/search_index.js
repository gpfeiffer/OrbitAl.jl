var documenterSearchIndex = {"docs":
[{"location":"orbits/#Orbits","page":"Orbits","title":"Orbits","text":"","category":"section"},{"location":"orbits/","page":"Orbits","title":"Orbits","text":"This module provides orbit computation algorithms and standard group actions, with options to record word paths, Schreier trees, coset representatives, stabilizers, and more.","category":"page"},{"location":"orbits/","page":"Orbits","title":"Orbits","text":"","category":"page"},{"location":"orbits/#Basic-Orbit-Computation","page":"Orbits","title":"üß† Basic Orbit Computation","text":"","category":"section"},{"location":"orbits/#OrbitAl.orbits.orbit","page":"Orbits","title":"OrbitAl.orbits.orbit","text":"orbit(aaa, x, under)\n\nCompute the orbit of a point x under the set of operators aaa using the action function under(y, a), which defines how elements of the domain are acted upon.\n\nReturns the list of points reachable from x by repeatedly applying the elements of aaa.\n\n\n\n\n\n","category":"function"},{"location":"orbits/","page":"Orbits","title":"Orbits","text":"","category":"page"},{"location":"orbits/#Actions","page":"Orbits","title":"üß∞ Actions","text":"","category":"section"},{"location":"orbits/","page":"Orbits","title":"Orbits","text":"Action functions passed as the under argument to orbit functions:","category":"page"},{"location":"orbits/","page":"Orbits","title":"Orbits","text":"","category":"page"},{"location":"orbits/#Orbit-Variants","page":"Orbits","title":"üöÄ Orbit Variants","text":"","category":"section"},{"location":"orbits/","page":"Orbits","title":"Orbits","text":"These return richer data structures tracking more information about the orbit:","category":"page"},{"location":"orbits/#OrbitAl.orbits.orbit_with_words","page":"Orbits","title":"OrbitAl.orbits.orbit_with_words","text":"orbit_with_words(aaa, x, under)\n\nCompute the orbit of x under the action of the generators aaa, using the action function under and recording the sequence of generator indices that led to each orbit element.\n\nReturns a named tuple:\n\nlist: orbit elements\nwords: list of index sequences tracing how each was reached\n\n\n\n\n\n","category":"function"},{"location":"orbits/#OrbitAl.orbits.orbit_with_tree","page":"Orbits","title":"OrbitAl.orbits.orbit_with_tree","text":"orbit_with_tree(aaa, x, under)\n\nCompute the Schreier tree of the orbit of x under the generators aaa using the action function under.\n\nReturns:\n\norbit: a list of orbit elements\ntree: a Dict mapping each non-root node z to (k => y), where:\nk is the generator index used to reach z\ny is the parent node so that z = under(y, aaa[k])\n\n\n\n\n\n","category":"function"},{"location":"orbits/#OrbitAl.orbits.orbit_with_transversal","page":"Orbits","title":"OrbitAl.orbits.orbit_with_transversal","text":"orbit_with_transversal(aaa, x, under)\n\nCompute the orbit of x under the action of aaa, along with coset representatives (as permutations). Returns a named tuple with fields:\n\nlist: the orbit of x\nreps: corresponding permutations mapping x to each orbit element.\n\n\n\n\n\n","category":"function"},{"location":"orbits/#OrbitAl.orbits.orbit_with_stabilizer","page":"Orbits","title":"OrbitAl.orbits.orbit_with_stabilizer","text":"orbit_with_stabilizer(aaa, x, under)\n\nCompute the orbit of x under generators aaa, recording:\n\nlist: the orbit elements,\nreps: permutations mapping x to each orbit element,\nstab: generators of the stabilizer of x (via Schreier's Lemma).\n\nReturns a named tuple (list, reps, stab).\n\n\n\n\n\n","category":"function"},{"location":"orbits/#OrbitAl.orbits.orbit_with_edges","page":"Orbits","title":"OrbitAl.orbits.orbit_with_edges","text":"orbit_with_edges(aaa, x, under)\n\nCompute the orbit of x under the generators aaa and return:\n\nlist: the list of orbit elements\nedges: a list of undirected edges (as sorted index pairs)\n\n\n\n\n\n","category":"function"},{"location":"orbits/","page":"Orbits","title":"Orbits","text":"","category":"page"},{"location":"orbits/#Multiple-Starting-Points","page":"Orbits","title":"üîÅ Multiple Starting Points","text":"","category":"section"},{"location":"orbits/","page":"Orbits","title":"Orbits","text":"For cases where orbit computation begins from a set of starting points:","category":"page"},{"location":"orbits/","page":"Orbits","title":"Orbits","text":"","category":"page"},{"location":"orbits/#Helper-Utilities","page":"Orbits","title":"üß© Helper Utilities","text":"","category":"section"},{"location":"orbits/","page":"Orbits","title":"Orbits","text":"","category":"page"},{"location":"orbits/#Data-Type:-Orbit","page":"Orbits","title":"üì¶ Data Type: Orbit","text":"","category":"section"},{"location":"orbits/","page":"Orbits","title":"Orbits","text":"","category":"page"},{"location":"orbits/#Overloaded-Base-Functions","page":"Orbits","title":"üîß Overloaded Base Functions","text":"","category":"section"},{"location":"#OrbitAl.jl","page":"Home","title":"OrbitAl.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Welcome to the documentation for OrbitAl.jl, a Julia package for working with permutations and orbits in a simple and composable way.","category":"page"},{"location":"","page":"Home","title":"Home","text":"This documentation provides an overview of its modules and functionality.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Permutations\nPermutation Groups\nOrbits\nCoxeter Groups","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"You can install the package from GitHub:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.add(url=\"https://github.com/gpfeiffer/OrbitAl.jl\")","category":"page"},{"location":"#Usage","page":"Home","title":"Usage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using OrbitAl\n\np = Perm([2, 3, 1])\np^3 == one(p)  # true","category":"page"},{"location":"#Features","page":"Home","title":"Features","text":"","category":"section"},{"location":"permutation/#Permutations","page":"Permutations","title":"Permutations","text":"","category":"section"},{"location":"permutation/","page":"Permutations","title":"Permutations","text":"This module defines the core Perm type and basic operations on permutations in OrbitAl.jl.","category":"page"},{"location":"permutation/","page":"Permutations","title":"Permutations","text":"","category":"page"},{"location":"permutation/#Data-Type:-Perm","page":"Permutations","title":"üì¶ Data Type: Perm","text":"","category":"section"},{"location":"permutation/#OrbitAl.permutation.Perm","page":"Permutations","title":"OrbitAl.permutation.Perm","text":"Perm\n\nA permutation represented by a list of integers. The entry at index i indicates the image of i under the permutation.\n\nUse Perm(n) for the identity permutation of size n, or Perm(n, cycles) to construct from cycle notation.\n\nExamples\n\njulia> using OrbitAl\n\njulia> p = Perm([6, 4, 7, 2, 5, 9, 8, 3, 1])\nPerm([6, 4, 7, 2, 5, 9, 8, 3, 1])\n\njulia> p == Perm(9, [[1, 6, 9], [2, 4], [3, 7, 8]])\ntrue\n\njulia> id9 = Perm(9)\nPerm([1, 2, 3, 4, 5, 6, 7, 8, 9])\n\njulia> p == id9\nfalse\n\n\n\n\n\n","category":"type"},{"location":"permutation/","page":"Permutations","title":"Permutations","text":"","category":"page"},{"location":"permutation/#Constructors","page":"Permutations","title":"üèó Constructors","text":"","category":"section"},{"location":"permutation/#Base.one","page":"Permutations","title":"Base.one","text":"one(Perm, n::Int)\n\nAlias for Perm(n) ‚Äî the identity permutation on n elements.\n\n\n\n\n\none(perm::Perm)\n\nIdentity permutation with the same degree as perm.\n\n\n\n\n\n","category":"function"},{"location":"permutation/#OrbitAl.permutation.transpositions","page":"Permutations","title":"OrbitAl.permutation.transpositions","text":"transpositions(n)\n\nReturn the list of adjacent transpositions (j-1 j) for j = 2 to n.\n\n\n\n\n\n","category":"function"},{"location":"permutation/#OrbitAl.permutation.shuffle!","page":"Permutations","title":"OrbitAl.permutation.shuffle!","text":"shuffle!(perm::Perm)\n\nApply the Fisher-Yates shuffle to perm in-place.\n\n\n\n\n\n","category":"function"},{"location":"permutation/#Base.rand","page":"Permutations","title":"Base.rand","text":"rand(Perm, n)\n\nGenerate a random permutation of size n.\n\n\n\n\n\n","category":"function"},{"location":"permutation/","page":"Permutations","title":"Permutations","text":"","category":"page"},{"location":"permutation/#Attributes-and-Properties","page":"Permutations","title":"üìè Attributes and Properties","text":"","category":"section"},{"location":"permutation/#OrbitAl.permutation.degree","page":"Permutations","title":"OrbitAl.permutation.degree","text":"degree(perm::Perm)\n\nReturns the degree (length of the domain) of the permutation.\n\n\n\n\n\n","category":"function"},{"location":"permutation/#OrbitAl.permutation.domain","page":"Permutations","title":"OrbitAl.permutation.domain","text":"domain(perm::Perm)\n\nReturns the domain of the permutation as range 1:n.\n\n\n\n\n\n","category":"function"},{"location":"permutation/#OrbitAl.permutation.shape","page":"Permutations","title":"OrbitAl.permutation.shape","text":"shape(perm::Perm)\n\nReturns the list of cycle lengths, sorted decreasingly.\n\n\n\n\n\n","category":"function"},{"location":"permutation/#OrbitAl.permutation.order","page":"Permutations","title":"OrbitAl.permutation.order","text":"order(perm::Perm)\n\nReturns the order of the permutation.\n\n\n\n\n\n","category":"function"},{"location":"permutation/#Base.sign","page":"Permutations","title":"Base.sign","text":"sign(perm::Perm)\n\nReturns the sign (+1 or -1) of the permutation.\n\n\n\n\n\n","category":"function"},{"location":"permutation/#OrbitAl.permutation.last_moved","page":"Permutations","title":"OrbitAl.permutation.last_moved","text":"last_moved(perm::Perm)\n\nReturns the largest index moved by the permutation (0 if identity).\n\n\n\n\n\n","category":"function"},{"location":"permutation/#OrbitAl.permutation.isidentity","page":"Permutations","title":"OrbitAl.permutation.isidentity","text":"isidentity(perm::Perm)\n\nCheck whether the permutation is the identity.\n\n\n\n\n\n","category":"function"},{"location":"permutation/#OrbitAl.permutation.cycles","page":"Permutations","title":"OrbitAl.permutation.cycles","text":"cycles(perm::Perm)\n\nDecompose the permutation into disjoint cycles.\n\n\n\n\n\n","category":"function"},{"location":"permutation/","page":"Permutations","title":"Permutations","text":"","category":"page"},{"location":"permutation/#Group-Operations","page":"Permutations","title":"üîÑ Group Operations","text":"","category":"section"},{"location":"permutation/#Base.:==-Tuple{Perm, Perm}","page":"Permutations","title":"Base.:==","text":"==(p::Perm, q::Perm)\n\nCheck two permutations for equality.\n\n\n\n\n\n","category":"method"},{"location":"permutation/#Base.hash-Tuple{Perm, UInt64}","page":"Permutations","title":"Base.hash","text":"hash(perm::Perm, h::UInt)\n\nCompute the hash of a permutation.\n\n\n\n\n\n","category":"method"},{"location":"permutation/#Base.isless-Tuple{Perm, Perm}","page":"Permutations","title":"Base.isless","text":"isless(p::Perm, q::Perm)\n\nLexicographic comparison of two permutations.\n\n\n\n\n\n","category":"method"},{"location":"permutation/#Base.inv-Tuple{Perm}","page":"Permutations","title":"Base.inv","text":"inv(perm::Perm)\n\nReturns the inverse of the permutation.\n\n\n\n\n\n","category":"method"},{"location":"permutation/#Base.:*-Tuple{Perm, Perm}","page":"Permutations","title":"Base.:*","text":"p * q\n\nPermutation multiplication: i^(p*q) == (i^p)^q.\n\n\n\n\n\n","category":"method"},{"location":"permutation/#Base.:/-Tuple{Perm, Perm}","page":"Permutations","title":"Base.:/","text":"p / q\n\nRight division: p * inv(q)\n\n\n\n\n\n","category":"method"},{"location":"permutation/#Base.:^-Tuple{Perm, Int64}","page":"Permutations","title":"Base.:^","text":"p ^ n\n\nRaise the permutation p to the integer power n.\n\n\n\n\n\n","category":"method"},{"location":"permutation/","page":"Permutations","title":"Permutations","text":"","category":"page"},{"location":"permutation/#Actions","page":"Permutations","title":"üéØ Actions","text":"","category":"section"},{"location":"permutation/#Base.:^-Tuple{Int64, Perm}","page":"Permutations","title":"Base.:^","text":"x ^ p\n\nApply the permutation p to the point or vector x.\n\n\n\n\n\n","category":"method"},{"location":"permutation/#OrbitAl.permutation.permuted","page":"Permutations","title":"OrbitAl.permutation.permuted","text":"permuted(list, perm)\n\nApply the inverse of perm to a list ‚Äî Polya-style.\n\n\n\n\n\n","category":"function"}]
}
